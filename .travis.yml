language: c
sudo: required

os:
  - linux
  - osx

compiler:
  - gcc

branches:
  only:
    - master

# Install dependencies for various OS'
before_install:
  - if [ $TRAVIS_OS_NAME = windows ]; then choco install make cmake; fi
  - if [ $TRAVIS_OS_NAME = linux ];   then sudo apt-key update && sudo apt-get update && sudo apt-get -y -f install gfortran libz-dev m4 bison python3 cmake && sudo apt-get update cmake; fi
  - if [ $TRAVIS_OS_NAME = osx ];     then brew update && brew install gcc; fi
  - export FC=$(which gfortran);      echo $FC
  - export CC=$(which gcc);           echo $CC
  - export CXX=$(which g++);          echo $CXX

# Build Exodus and binary; test
script:
  # LaGriT compilation tests
  - make exodus  CC=$CC FC=$FC CXX=$CXX
  - make release CC=$CC FC=$FC CXX=$CXX
  - make static  CC=$CC FC=$FC CXX=$CXX
  - make test

# Display successful messages
after_success:
  - echo LaGriT successfully compiled
  - cp src/lagrit lagrit-$TRAVIS_OS_NAME
  
# Push binaries to GitHub Releases *only* when there is a tagged commit
jobs:
  include:
    - stage: Deploy macOS binary
      os: osx
      deploy:
        provider: releases
        api_key: $GITHUB_OATH_TOKEN
        draft: true
        skip_cleanup: true
        file: lagrit-$TRAVIS_OS_NAME
        on:
          tags: true
    - stage: Deploy Linux binary and publish
      deploy:
        provider: releases
        api_key: $GITHUB_OATH_TOKEN
        draft: false
        skip_cleanup: true
        file: lagrit-$TRAVIS_OS_NAME
        on:
          tags: true

